name: Build and Push to ECR

on:
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - 'litellm-config.yaml'
      - 'pii_*.py'
      - '.github/workflows/build-and-push-ecr.yml'
  workflow_dispatch:

env:
  AWS_REGION: us-east-1

jobs:
  build-and-push:
    name: Build and Push Container Images
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push LiteLLM image with embedded guardrails
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ secrets.ECR_REGISTRY }}/litellm-guardrails:latest
          ${{ secrets.ECR_REGISTRY }}/litellm-guardrails:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64


    - name: Output build information
      run: |
        echo "Container build completed successfully"
        echo "Image: ${{ secrets.ECR_REGISTRY }}/litellm-guardrails:${{ github.sha }}"
        echo "Tags: latest, ${{ github.sha }}"
        echo "Features: Regex + Presidio PII detection, Multi-platform (amd64/arm64)"

    - name: Trigger Infrastructure Deployment
      if: success()
      run: |
        # Build the image URI that was just pushed
        IMAGE_URI="${{ secrets.ECR_REGISTRY }}/litellm-guardrails:${{ github.sha }}"
        
        echo "Triggering infrastructure deployment with new image..."
        echo "Image: $IMAGE_URI"
        echo "Commit: ${{ github.sha }}"
        
        # Trigger deployment in infrastructure repo using curl
        HTTP_STATUS=$(curl -s -w "%{http_code}" -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: Bearer ${{ secrets.INFRA_DEPLOY_TOKEN }}" \
          https://api.github.com/repos/mrcloudchase/litellm-infra/dispatches \
          -d "{
            \"event_type\":\"deploy_new_image\",
            \"client_payload\":{
              \"image_uri\":\"$IMAGE_URI\",
              \"image_tag\":\"${{ github.sha }}\",
              \"environment\":\"dev\",
              \"source_commit\":\"${{ github.sha }}\",
              \"source_repo\":\"${{ github.repository }}\"
            }
          }" -o /dev/null)
        
        if [ "$HTTP_STATUS" -eq 204 ]; then
          echo "Infrastructure deployment triggered successfully (HTTP $HTTP_STATUS)"
          echo "Monitor: https://github.com/mrcloudchase/litellm-infra/actions"
        else
          echo "Repository dispatch failed with HTTP status: $HTTP_STATUS"
          exit 1
        fi
