graph TB
    User[👤 User/Client] -->|HTTP Request| LiteLLM[🚀 LiteLLM Proxy<br/>Port 4000]
    
    LiteLLM -->|pre_call hook| PIIPreCall[🛡️ PIIRegexPreCallGuardrail<br/>Embedded in LiteLLM]
    
    PIIPreCall -->|Scan Input| PIICore[🔍 PIIRegexDetection<br/>Core Detection Engine]
    
    PIICore -->|Check Patterns| EmailCheck{📧 Email Detection}
    PIICore -->|Check Patterns| SSNCheck{🔢 SSN Detection}
    PIICore -->|Check Patterns| PhoneCheck{📞 Phone Detection}
    PIICore -->|Check Patterns| CCCheck{💳 Credit Card Detection}
    
    EmailCheck -->|PII Found| Block1[🚫 Block Request<br/>ValueError Exception]
    SSNCheck -->|PII Found| Block1
    PhoneCheck -->|PII Found| Block1
    CCCheck -->|PII Found| Block1
    
    EmailCheck -->|Clean| Allow1[✅ Continue to Model]
    SSNCheck -->|Clean| Allow1
    PhoneCheck -->|Clean| Allow1
    CCCheck -->|Clean| Allow1
    
    Block1 -->|Error Response| User
    Allow1 -->|Forward Request| Ollama[🦙 Ollama LLMs<br/>Port 11434<br/>llama3.2:3b, deepseek-r1:1.5b]
    
    Ollama -->|Model Response| PIIPostCall[🛡️ PIIRegexPostCallGuardrail<br/>Embedded in LiteLLM]
    
    PIIPostCall -->|Scan Output| PIICore2[🔍 PIIRegexDetection<br/>Response Validation]
    
    PIICore2 -->|Check Response| ResponseCheck{🔍 PII in Response?}
    
    ResponseCheck -->|PII Found| Block2[🚫 Block Response<br/>ValueError Exception]
    ResponseCheck -->|Clean| Allow2[✅ Return Response]
    
    Allow2 -->|Final Response| User
    Block2 -->|Blocked Response| User
    
    LiteLLM -.->|API Keys & Logs| Postgres[(🗄️ PostgreSQL<br/>Port 5432<br/>Enterprise Features)]
    
    %% Presidio Integration (Stretch Goal)
    LiteLLM -.->|Alternative| PresidioAnalyzer[🤖 Presidio Analyzer<br/>Port 3000<br/>ML-based PII Detection]
    LiteLLM -.->|Alternative| PresidioAnonymizer[🎭 Presidio Anonymizer<br/>Port 3001<br/>PII Masking/Redaction]
    
    %% Styling
    classDef primaryService fill:#e1f5fe,stroke:#01579b,stroke-width:2px
    classDef guardrail fill:#f3e5f5,stroke:#4a148c,stroke-width:2px
    classDef detection fill:#fff3e0,stroke:#e65100,stroke-width:2px
    classDef decision fill:#e8f5e8,stroke:#2e7d32,stroke-width:2px
    classDef block fill:#ffebee,stroke:#c62828,stroke-width:2px
    classDef database fill:#f1f8e9,stroke:#33691e,stroke-width:2px
    
    class LiteLLM,Ollama primaryService
    class PIIPreCall,PIIPostCall guardrail
    class PIICore,PIICore2 detection
    class EmailCheck,SSNCheck,PhoneCheck,CCCheck,ResponseCheck decision
    class Block1,Block2 block
    class Postgres database
    
    subgraph "PII Detection Patterns"
        EmailPatterns["📧 Email Patterns:<br/>• Standard: user@domain.com<br/>• Plus addressing: user+tag@domain.com<br/>• International: user@domain.co.uk"]
        SSNPatterns["🔢 SSN Patterns:<br/>• Hyphenated: 123-45-6789<br/>• Spaced: 123 45 6789<br/>• Continuous: 123456789<br/>• Context: SSN: 123-45-6789"]
    end
    
    subgraph "Guardrail Configuration"
        Config["⚙️ LiteLLM Config:<br/>• Mode: pre_call + post_call<br/>• Default: ON (all requests)<br/>• Action: BLOCK<br/>• API: http://pii-guardrail:8001/validate"]
    end
    
    style PIIGuard fill:#ffcccc,stroke:#ff0000,stroke-width:2px
    style PIIGuard2 fill:#ffcccc,stroke:#ff0000,stroke-width:2px
    style Block1 fill:#ff6666,color:#ffffff
    style Block2 fill:#ff6666,color:#ffffff
    style Allow1 fill:#66ff66,color:#000000
    style Allow2 fill:#66ff66,color:#000000
    style EmailCheck fill:#ffffcc,stroke:#ffaa00
    style SSNCheck fill:#ffffcc,stroke:#ffaa00
    style EmailCheck2 fill:#ffffcc,stroke:#ffaa00
    style SSNCheck2 fill:#ffffcc,stroke:#ffaa00
